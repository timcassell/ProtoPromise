For each new release...


Before releasing, test the demo scene in Unity 5.5 to make sure it works (no need to run tests as the test runner didn't exist back then).


Update the version in `ProtoPromise.csproj`, `ProtoPromiseUnityHelpers.csproj`, and `package.json`.

To create the UnityPackage for releases:

1. Edit `README.md` to remove the `## Package Installation` and `## Latest Updates` sections, then convert it to `README.pdf` and place it in the `ProtoPromise_Unity\Assets\Plugins\ProtoPromise` directory (discard the changes to `README.md` before git commit).
2. Repeat step 1 for `ReleaseNotes.md`.
3. In the Unity editor, right-click the `ProtoPromise` folder and click `Export Package...`, uncheck `Include dependencies`, include everything, then click `Export...` and name the exported file `ProtoPromise.unitypackage`.
4. Upload `ProtoPromise.unitypackage` with the release on GitHub.
5. Upload and publish new Unity Asset Store version.
6. Repeat these steps for each new release.

Unity version may need to be updated to use the earliest version that the Asset Store Tools supports.

For the 2018 unity package (for both GitHub and Unity Asset Store), rename the `Samples~` to `Demo`.
Leave it as `Samples~` for the 2019-and-newer package version.


To convert markdown to pdf:

1. grip README.md --export README.html
2. Use browser to print html to pdf
3. Merge the pages to a single page (can use an online tool).
4. Crop the outline (including the title) that grip created.


For Debugging:

By default, ProtoPromise types are marked with the `DebuggerNonUserCodeAttribute`, making the debugger skip over the library code instead of stepping into it. To disable this behavior and to get more detailed stack traces, define the compiler symbol `PROTO_PROMISE_DEVELOPER_MODE` in Unity, or change `<DeveloperMode>` to `true` in the non-unity csproj.