For each new release:

Update the version in `Directory.Build.props` and `Package/package.json`.


To create the UnityPackage for releases:

1. Open `ProtoPromise_Unity` in Unity 2018.3
2. Copy `Package` folder to `Assets/Plugins/ProtoPromise`
3. Delete `Tests` folder
4. Rename `Samples~` to `Demo`
5. Right-click the `ProtoPromise` folder and click `Export Package...`, uncheck `Include dependencies`, include everything, then click `Export...` and name the exported file `ProtoPromise.unitypackage`
6. Upload `ProtoPromise.unitypackage` with the release on GitHub

For Unity Asset Store package upload:

1. Open `ProtoPromise_Unity` project in Unity 2019.4.0
2. Install "Asset Store Publishing Tools" asset from the Unity Asset Store
3. Add scripting define symbol `UNITY_ASTOOLS_EXPERIMENTAL`
4. Asset Store Tools > Asset Store Uploader
5. Set the Upload type to `Local UPM Package`
6. Select the `Package/` path
7. Click Upload.

Unity version may need to be updated to use the earliest version that the Asset Store Tools supports.


For the ProtoPromise.Analyzer package, if changes were made:

- Move rules from `AnalyzerReleases.Unshipped.md` to `AnalyzerReleases.Shipped.md`
- Build in Release
- Add `ProtoPromise.Analyzer.dll` to Unity project under `Plugins/ProtoPromise/Analyzers`
- Open Unity in 2020.2 and add the label `RoslynAnalyzer` to the dll
- Create a unitypackage from the dll and name it `ProtoPromise.Analyzer.unitypackage`
- Upload `ProtoPromise.Analyzer.unitypackage` with the release on GitHub


For debugging internal library code:

By default, ProtoPromise types are marked with the `[DebuggerNonUserCode]` and `[StackTraceHidden]`, making the debugger skip over the library code instead of stepping into it. To disable this behavior and to get more detailed stack traces, define the compiler symbol `PROTO_PROMISE_DEVELOPER_MODE` in Unity, or change `<DeveloperMode>` to `true` in `Directory.Build.props`.
